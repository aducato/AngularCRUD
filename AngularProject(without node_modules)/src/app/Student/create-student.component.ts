import { Component, OnInit, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';

import {Student} from '../models/student.model'
import { StudentService } from './student.service';

@Component({
  // selector: 'app-create-student',
  templateUrl: './create-student.component.html',
  styleUrls: ['./create-student.component.css']
})
export class CreateStudentComponent implements OnInit {

  @ViewChild('stdForm')
    public CreateStudentForm: NgForm | undefined;


  student : Student = {
    id: 0,
    name : "",
    gender : undefined,
    email: undefined,
    dob: undefined,
  };


  constructor(private _StudentService : StudentService,
    private _router : Router,
    private _route : ActivatedRoute
    ) { 

 }

 ngOnInit(): void {

//here we are reading the id which is passed to this
// component when we click on Edit on student's item

   this._route.paramMap.subscribe(
     (parameterMap) =>
     {
       const id = +parameterMap.get('id')!;
       this.getStudent(id);
     });
  
 }

 private getStudent(StdID : number){
   if(StdID == 0){
     this.student = {
       id: 0,
       name : "",
       gender : undefined,
       email: undefined,
       dob: undefined,
     };   
     this.CreateStudentForm?.reset();       
   }
   else
   {
   
    this._StudentService.GetStudentByID(StdID).subscribe(
        (stdObject) => this.student = stdObject,
        (err : any) => console.log(err)
      );
     
     }
 }
 SaveData(studentForm: NgForm) : void{


 if(this.student.id===0){

   this._StudentService.CreateStudent(this.student).subscribe(
       (data) =>{
         console.log("Posted Student "+data);
         alert("Posted Student "+data);
         // it will reset the form and set all flags
         // to original position like dirty flag to false
         this.CreateStudentForm!.reset();
         this._router.navigate(['list']); 
       },
       (error: any) => {
         console.log(error);
       }
   );
 }
 else
 {
   this._StudentService.updateStudent(this.student).subscribe(
     () =>{
       // it will reset the form and set all flags to original 
       //position like dirty flag to false
       this.CreateStudentForm!.reset();
       this._router.navigate(['list']); 
     },
     (error: any) => {
       console.log(error);
     }
 );


 }
 
 }

}
