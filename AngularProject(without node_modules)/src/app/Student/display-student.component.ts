import { Component, Input, OnInit, Output,EventEmitter } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';

import { Student } from '../models/student.model';
import { StudentService } from './student.service';


@Component({
  selector: 'app-display-student',
  templateUrl: './display-student.component.html',
  styleUrls: ['./display-student.component.css']
})
export class DisplayStudentComponent implements OnInit {

// for passing data from child to Parent Component @Output() decorator is used
// @Output() notify : EventEmitter<Student> = new EventEmitter<Student>();

// for passing data from Parent to child Component @Input() decorator is used
@Input() student : Student = new Student();

@Input() searchTerm : string = "";

@Output() notifyDelete : EventEmitter<number> = new EventEmitter<number>();


SelectedStudentID: number | undefined;

  constructor(private _route: ActivatedRoute,
     private _router : Router,
     private _studentServie: StudentService
     ) { }


     confirmDelete = false;

    //  IsHidden = false;

  ngOnInit(): void {

   this.SelectedStudentID = +this._route.snapshot.paramMap.get('id')!;

   if(this.SelectedStudentID==0){
     this.SelectedStudentID = -1;
   }
  }
  EditStudent(){
    this._router.navigate(['edit',this.student.id]);
  }

  ViewStudent() {

    this._router.navigate(['/student', this.student.id], {
      queryParams: {
        'searchTerm': this.searchTerm,
        'testParam': 'test'
      }
    });
  }

  deleteStudent(){
    this._studentServie.DeleteStudent(this.student.id).subscribe(
      () => console.log(`Employee with id = ${this.student.id} deleted`),
      (err) => console.log(err)
    );

    this.notifyDelete.emit(this.student.id);
  }

}
